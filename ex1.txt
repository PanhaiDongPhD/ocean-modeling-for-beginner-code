program ex1
!**********************************************
!* Fortran code dealing with the additional exercise for readers.
!* 本代码为练习1的附加练习的代码
!*
!* written by panhaidong, 2014,11,14
!**********************************************
INTEGER :: n    ! time level
INTEGER :: ntot ! total number of iterations
INTEGER :: nout ! output every nout's iteration step
INTEGER :: mode ! use either explicit or implicit scheme 

REAL :: C(3)=100.0       ! concentration at time level n
REAL :: CN(3)      ! "N" for new, concentration at next time level n+1
REAL :: CTRUE   ! exact analytical solution for comparison
REAL :: CZERO   ! Initial value of C
REAL :: dt      ! time step
REAL :: kappa   ! decay constant
REAL :: time    ! time counter
REAL :: fac(3)    ! factor used in the scheme
REAL :: fac1     ! factor used in the scheme
REAL :: fac2     ! factor used in the scheme
REAL :: alpha   ! weighting factor in the scheme

CZERO = 100.0   ! initial concentration is 100
      
kappa = 0.0001  ! value of decay constant; you can also write this as kappa = 1.0e-4
dt = 3600.      ! value of time step; dt = 60 seconds here
Do i=1,3
 mode = i;alpha= 0.25*i;       ! mode = 1 (Hybrid Scheme alpha=0.25 ); mode = 2 (Hybird scheme alpha=0.5);mode=3(Hybird scheme alpha=0.75);
 fac1 = 1.0+dt*kappa*alpha;
 fac2=1.0-(1.0-alpha)*dt*kappa;
 fac(i)=fac2/fac1;

  IF(fac2<=0) write(6,*)'STABITY CRITERION ALERT: REDUCE TIME STEP'
end do

! Total simulation time is 24 hours. How many interation steps is this?

ntot = 24.0*3600./dt  ! Remember that an hour has 60 minutes of 60 seconds each

! Data output at every hour of the simulation.

  nout = 1.0*3600./dt

  open(10, file = 'E:\outputdata.txt', form = 'formatted', status = 'unknown')

! Write initial time and concentration to this file.
WRITE(10,*)0,100.0,100.0 ,100.0,100.0


!****** Start of iteration *******
DO n = 1,ntot   
!*********************************
 Do i=1,3
  CN(i) = C(i)*fac(i) ! prediction for next time step
  C(i) = CN(i)  ! updating for upcoming time step
 end do
  time = REAL(n)*dt ! time counter
  CTRUE = CZERO*exp(-kappa*time)  ! exact analytical solution

 
   WRITE(10,*)time/3600.0, C(1),C(2),C(3), CTRUE

   ! We can also write a note a message to the screen here.

   write(6,*)"Data output at time = ",time/3600.0," hours"

  
 
!****** End of iteration *******
END DO
!*******************************

STOP
END 